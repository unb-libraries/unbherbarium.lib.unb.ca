<?php

/**
 * @file
 * Contains unb_herbarium.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_help().
 */
function unb_herbarium_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the UNB Herbarium.
    case 'help.page.unb_herbarium':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('UNB Herbarium Features') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function unb_herbarium_theme_registry_alter(&$theme_registry) {
  $theme_registry['taxonomy_term']['path'] = drupal_get_path('module', 'unb_herbarium') . '/templates';
  $theme_registry['views_exposed_form']['path'] = drupal_get_path('module', 'unb_herbarium') . '/templates';
}

/**
 * Implements hook_theme().
 */
function unb_herbarium_theme($existing, $type, $theme, $path) {
  return array(
    'node__herbarium_specimen' => array(
      'arguments' => array(
        'view' => NULL,
        'field' => NULL,
        'row' => NULL,
        'output' => NULL,
      ),
      'template' => 'node--herbarium-specimen',
      'path' => drupal_get_path('module', 'unb_herbarium') . '/templates',
      'base hook' => 'node__herbarium_specimen',
    ),
  );
}

/**
 * Implements hook_preprocess_hook().
 */
function unb_herbarium_preprocess_node__herbarium_specimen(&$variables) {
  $node = $variables['elements']['#node'];

  $assigned_tax_term_list = $node->get('field_taxonomy_tid');
  $tid = $assigned_tax_term_list->get(0)->entity->id();

  // TODO: traverse up tree until we have a rank of 'Species'.
  $genus_tid = _herbarium_core_term_get_first_parent(Term::load($tid))->id();
  $family_tid = _herbarium_core_term_get_first_parent(Term::load($genus_tid))->id();

  // Split date into separate year/month/day fields for full details mode.
  $collection_date = $node->get('field_dwc_eventdate')->getString();
  if ($collection_date) {
    $date = new DateTime($collection_date);
    $variables['collection_date_year'] = $date->format('Y');
    $variables['collection_date_month'] = $date->format('m');
    $variables['collection_date_day'] = $date->format('d');
  }

  // Infraspecific Epithet = genus name specific epithet connecting term(rank).
  $variables['specimen_family'] = unb_herbarium_get_tax_term_link($family_tid);
  $variables['specimen_genus'] = unb_herbarium_get_tax_term_link($genus_tid);
  $variables['specimen_assigned_taxon'] = $assigned_tax_term_list->view();
  $variables['specimen_authority'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_scientificnameauthor')->view();
  $variables['specimen_taxon_rank'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_taxonrank')->view();
  $variables['specimen_class'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_class')->view();
  $variables['specimen_measurement_type'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_measurementtype')->view();
  $variables['specimen_measurement_value'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_measurementvalue')->view();
  $variables['specimen_measurement_id'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_measurementid')->view();
  $variables['specimen_en_common_names'] = $assigned_tax_term_list->get(0)->entity->get('field_cmh_english_common_names')->view();
  $variables['specimen_fr_common_names'] = $assigned_tax_term_list->get(0)->entity->get('field_cmh_french_common_names')->view();
  $variables['specimen_synonyms'] = $assigned_tax_term_list->get(0)->entity->get('field_synonyms')->view();
  $variables['specimen_taxon_remarks'] = $assigned_tax_term_list->get(0)->entity->get('field_dwc_taxonremarks')->view();
}

/**
 * Returns raw html of linked taxonomy term name for given tid.
 */
function unb_herbarium_get_tax_term_link($tid) {
  $term = Term::load($tid);
  $name = $term->getName();
  $href = $term->url();

  return "<a href=\"$href\">$name</a>";
}
