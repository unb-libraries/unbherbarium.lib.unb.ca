<?php

/**
 * @file
 * Features related to herbarium_specimen_lts.
 */

define('HERBARIUM_SPECIMEN_LTS_QUEUE_TABLE', 'herbarium_specimen_lts_lts_image_queue');
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_UNPROCESSED', 0);
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_PROCESSING', 1);
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_FAIL_NO_NODE_ACCID', 2);
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_FAIL_NO_SURROGATES', 3);
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_FAIL_NO_DZI', 4);
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_FAIL_NOT_ARCHIVED', 5);
define('HERBARIUM_SPECIMEN_LTS_QUEUE_STATUS_COMPLETE', 10);

/**
 * Build batch operations array for specimen surrogates from an archival master.
 *
 * @param object $nid
 *   The node id of the parent herbarium_specimen node.
 * @param object $file_path
 *   The file path of the archival master TIFF File object.
 *
 * @return array
 *   A batch API operations array to generate the required surrogates.
 */
function _herbarium_specimen_lts_store_new_image($nid, $file_path, $commit_message) {
  return [
    'title' => t('Updating Archive Image'),
    'init_message' => t('Updating Archive Image'),
    'operations' => [
      [
        [
          'Drupal\herbarium_specimen_lts\HerbariumImageLtsArchiver',
          'archiveFileToLts',
        ],
        [$nid, $file_path, \Drupal::currentUser()->id(), $commit_message],
      ],
      [
        [
          'Drupal\herbarium_specimen_lts\HerbariumImageLtsArchiver',
          'auditDrushBatch',
        ],
        [$nid, $file_path],
      ],
    ],
  ];
}

/**
 * Set the file status for a previously loaded herbarium batch specimen.
 *
 * @param object $file_path
 *   The file path of the archival master TIFF File object.
 * @param string $status
 *   The status to set.
 *
 * @return \Drupal\Core\Database\StatementInterface
 *   The db_query interface.
 */
function _herbarium_specimen_lts_set_file_status($file_path, $status) {
  $sql = 'UPDATE ' . HERBARIUM_SPECIMEN_LTS_QUEUE_TABLE . " SET status=$status WHERE file='$file_path'";
  return db_query($sql);
}

/**
 * Regenerate the derivatives for a file that has an existing archival tiff.
 *
 * @param int $nid
 *   The status to set.
 *
 * @return array
 *   The batch operation array.
 */
function _herbarium_specimen_lts_regenerate_specimen_derivatives_batch($nid) {
  $file_path = "/lts-archive/$nid.tif";

  $batch = [
    'title' => t('Regenerating Specimen Images'),
    'init_message' => t('Removing existing assets'),
    'operations' => [],
  ];

  // Pull down the LTS master locally.
  $batch['operations'][] = [
    [
      'Drupal\herbarium_specimen_lts\HerbariumImageLtsArchiver',
      'pullMasterFromLts',
    ],
    [$nid],
  ];

  // Generate Image surrogates.
  $surrogates_batch = _herbarium_specimen_generate_specimen_surrogates_batch($nid, $file_path);
  $batch['operations'] = array_merge($batch['operations'], $surrogates_batch['operations']);

  // Remove LTS master.
  $batch['operations'][] = [
    [
      'Drupal\herbarium_specimen_lts\HerbariumImageLtsArchiver',
      'removeMasterFromLocalLts',
    ],
    [$nid],
  ];

  return $batch;
}

/**
 * Add the archival master for a herbarium specimen.
 *
 * @param int $nid
 *   The status to set.
 * @param string $file_path
 *   The file path of the archival master TIFF.
 *
 * @return array
 *   The batch operation array.
 */
function _herbarium_specimen_lts_add_archival_master($nid, $file_path) {
  $batch = [
    'title' => t('Updating Master Image'),
    'init_message' => t('Updating Master Image'),
    'operations' => [],
  ];

  // Image surrogates.
  $surrogates_batch = _herbarium_specimen_generate_specimen_surrogates_batch($nid, $file_path);
  $batch['operations'] = array_merge($batch['operations'], $surrogates_batch['operations']);

  // Only process file for LTS if we have a server set.
  if (trim(Settings::get('specimen_lts_archive') != '')) {
    $lts_batch = _herbarium_specimen_lts_store_new_image($nid, $file_path, "[$nid] Upload of new archival file.");
    $batch['operations'] = array_merge($batch['operations'], $lts_batch['operations']);

    // After updating the LFS repo, push it.
    $batch['operations'][] = [
      [
        'Drupal\herbarium_specimen_lts\HerbariumImageLtsArchiver',
        'pushLfs',
      ],
      [],
    ];
  }

  return $batch;
}
